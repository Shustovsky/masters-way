// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: file.query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createFile = `-- name: CreateFile :one
INSERT INTO files (name, src_url, preview_url, storage_type, google_drive_id, owner_uuid, size)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING uuid, name, src_url, preview_url, owner_uuid
`

type CreateFileParams struct {
	Name          string      `json:"name"`
	SrcUrl        string      `json:"src_url"`
	PreviewUrl    pgtype.Text `json:"preview_url"`
	StorageType   StorageType `json:"storage_type"`
	GoogleDriveID pgtype.Text `json:"google_drive_id"`
	OwnerUuid     pgtype.UUID `json:"owner_uuid"`
	Size          int64       `json:"size"`
}

type CreateFileRow struct {
	Uuid       pgtype.UUID `json:"uuid"`
	Name       string      `json:"name"`
	SrcUrl     string      `json:"src_url"`
	PreviewUrl pgtype.Text `json:"preview_url"`
	OwnerUuid  pgtype.UUID `json:"owner_uuid"`
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) (CreateFileRow, error) {
	row := q.db.QueryRow(ctx, createFile,
		arg.Name,
		arg.SrcUrl,
		arg.PreviewUrl,
		arg.StorageType,
		arg.GoogleDriveID,
		arg.OwnerUuid,
		arg.Size,
	)
	var i CreateFileRow
	err := row.Scan(
		&i.Uuid,
		&i.Name,
		&i.SrcUrl,
		&i.PreviewUrl,
		&i.OwnerUuid,
	)
	return i, err
}
