/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasAIGeneratePlansByMetricPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasAIGeneratePlansByMetricPayload{}

// SchemasAIGeneratePlansByMetricPayload struct for SchemasAIGeneratePlansByMetricPayload
type SchemasAIGeneratePlansByMetricPayload struct {
	Goal string `json:"goal"`
	Metric string `json:"metric"`
}

type _SchemasAIGeneratePlansByMetricPayload SchemasAIGeneratePlansByMetricPayload

// NewSchemasAIGeneratePlansByMetricPayload instantiates a new SchemasAIGeneratePlansByMetricPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasAIGeneratePlansByMetricPayload(goal string, metric string) *SchemasAIGeneratePlansByMetricPayload {
	this := SchemasAIGeneratePlansByMetricPayload{}
	this.Goal = goal
	this.Metric = metric
	return &this
}

// NewSchemasAIGeneratePlansByMetricPayloadWithDefaults instantiates a new SchemasAIGeneratePlansByMetricPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasAIGeneratePlansByMetricPayloadWithDefaults() *SchemasAIGeneratePlansByMetricPayload {
	this := SchemasAIGeneratePlansByMetricPayload{}
	return &this
}

// GetGoal returns the Goal field value
func (o *SchemasAIGeneratePlansByMetricPayload) GetGoal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Goal
}

// GetGoalOk returns a tuple with the Goal field value
// and a boolean to check if the value has been set.
func (o *SchemasAIGeneratePlansByMetricPayload) GetGoalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Goal, true
}

// SetGoal sets field value
func (o *SchemasAIGeneratePlansByMetricPayload) SetGoal(v string) {
	o.Goal = v
}

// GetMetric returns the Metric field value
func (o *SchemasAIGeneratePlansByMetricPayload) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *SchemasAIGeneratePlansByMetricPayload) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *SchemasAIGeneratePlansByMetricPayload) SetMetric(v string) {
	o.Metric = v
}

func (o SchemasAIGeneratePlansByMetricPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasAIGeneratePlansByMetricPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["goal"] = o.Goal
	toSerialize["metric"] = o.Metric
	return toSerialize, nil
}

func (o *SchemasAIGeneratePlansByMetricPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"goal",
		"metric",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasAIGeneratePlansByMetricPayload := _SchemasAIGeneratePlansByMetricPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasAIGeneratePlansByMetricPayload)

	if err != nil {
		return err
	}

	*o = SchemasAIGeneratePlansByMetricPayload(varSchemasAIGeneratePlansByMetricPayload)

	return err
}

type NullableSchemasAIGeneratePlansByMetricPayload struct {
	value *SchemasAIGeneratePlansByMetricPayload
	isSet bool
}

func (v NullableSchemasAIGeneratePlansByMetricPayload) Get() *SchemasAIGeneratePlansByMetricPayload {
	return v.value
}

func (v *NullableSchemasAIGeneratePlansByMetricPayload) Set(val *SchemasAIGeneratePlansByMetricPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasAIGeneratePlansByMetricPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasAIGeneratePlansByMetricPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasAIGeneratePlansByMetricPayload(val *SchemasAIGeneratePlansByMetricPayload) *NullableSchemasAIGeneratePlansByMetricPayload {
	return &NullableSchemasAIGeneratePlansByMetricPayload{value: val, isSet: true}
}

func (v NullableSchemasAIGeneratePlansByMetricPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasAIGeneratePlansByMetricPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


