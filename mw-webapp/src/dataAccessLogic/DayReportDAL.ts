import {dayReportDTOToDayReport} from "src/dataAccessLogic/DTOToPreviewConverter/dayReportDTOToDayReport";
import {DayReport} from "src/model/businessModel/DayReport";
import {DayReportService} from "src/service/DayReportService";

// /**
//  * Create DayReport params
//  */
// export interface CreateDayReportParams {

//   /**
//    * Way's UUID
//    */
//   wayUuid: string;

//   /**
//    * Way's name
//    */
//   wayName: string;

// }

/**
 * Get DayReports params
 */
export interface GetDayReportsParams {

  /**
   * Way's UUID
   */
  wayId: string;

  /**
   * Way's name
   */
  wayName: string;

  /**
   * Page
   */
  page?: number;

  /**
   * Limit
   */
  limit?: number;

}

/**
 * DayReports params
 */
export interface DayReportsParams {

  /**
   * Day reports amount
   */
  size: number;

  /**
   * Array of day reports
   */
  dayReports: DayReport[];

}

/**
 * Provides methods to interact with the DayReport business model
 */
export class DayReportDAL {

  /**
   * Create DayReport with empty fields and autogenerated uuid
   */
  public static async createDayReport(wayUuid: string): Promise<DayReport> {
    const dayReportDTO = await DayReportService.createDayReport({request: {wayUuid}});

    const dayReport = dayReportDTOToDayReport(dayReportDTO);

    return dayReport;
  }

  /**
   * Get day reports
   */
  public static async getDayReports(requestParameters: GetDayReportsParams): Promise<DayReportsParams> {
    const dayReportsDTO = await DayReportService.getDayReports(requestParameters);

    const dayReportsPreview = dayReportsDTO.dayReports.map(dayReportDTOToDayReport);

    const dayReports = {
      size: dayReportsDTO.size,
      dayReports: dayReportsPreview,
    };

    return dayReports;
  }

}
