// @ts-nocheck
/* eslint-disable */
/**
 * Masters way survey API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchemasPostSurveyUserIntroPayload
 */
export interface SchemasPostSurveyUserIntroPayload {
    /**
     * 
     * @type {string}
     * @memberof SchemasPostSurveyUserIntroPayload
     */
    deviceId: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasPostSurveyUserIntroPayload
     */
    preferredInterfaceLanguage: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasPostSurveyUserIntroPayload
     */
    role: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasPostSurveyUserIntroPayload
     */
    source: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasPostSurveyUserIntroPayload
     */
    studentExperience: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasPostSurveyUserIntroPayload
     */
    studentGoals: string;
    /**
     * 
     * @type {string}
     * @memberof SchemasPostSurveyUserIntroPayload
     */
    whyRegistered: string;
}

/**
 * Check if a given object implements the SchemasPostSurveyUserIntroPayload interface.
 */
export function instanceOfSchemasPostSurveyUserIntroPayload(
    value: object
): boolean {
    let isInstance = true;
    isInstance = isInstance && "deviceId" in value;
    isInstance = isInstance && "preferredInterfaceLanguage" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "source" in value;
    isInstance = isInstance && "studentExperience" in value;
    isInstance = isInstance && "studentGoals" in value;
    isInstance = isInstance && "whyRegistered" in value;

    return isInstance;
}

export function SchemasPostSurveyUserIntroPayloadFromJSON(json: any): SchemasPostSurveyUserIntroPayload {
    return SchemasPostSurveyUserIntroPayloadFromJSONTyped(json, false);
}

export function SchemasPostSurveyUserIntroPayloadFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): SchemasPostSurveyUserIntroPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deviceId': json['deviceId'],
        'preferredInterfaceLanguage': json['preferredInterfaceLanguage'],
        'role': json['role'],
        'source': json['source'],
        'studentExperience': json['studentExperience'],
        'studentGoals': json['studentGoals'],
        'whyRegistered': json['whyRegistered'],
    };
}


export function SchemasPostSurveyUserIntroPayloadToJSON(value?: SchemasPostSurveyUserIntroPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deviceId': value.deviceId,
        'preferredInterfaceLanguage': value.preferredInterfaceLanguage,
        'role': value.role,
        'source': value.source,
        'studentExperience': value.studentExperience,
        'studentGoals': value.studentGoals,
        'whyRegistered': value.whyRegistered,
    };
}

