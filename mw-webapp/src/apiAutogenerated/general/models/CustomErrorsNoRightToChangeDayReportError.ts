// @ts-nocheck
/* eslint-disable */
/**
 * Masters way general API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomErrorsNoRightToChangeDayReportError
 */
export interface CustomErrorsNoRightToChangeDayReportError {
    /**
     * 
     * @type {string}
     * @memberof CustomErrorsNoRightToChangeDayReportError
     */
    error: string;
    /**
     * 
     * @type {string}
     * @memberof CustomErrorsNoRightToChangeDayReportError
     */
    errorId: string;
}

/**
 * Check if a given object implements the CustomErrorsNoRightToChangeDayReportError interface.
 */
export function instanceOfCustomErrorsNoRightToChangeDayReportError(
    value: object
): boolean {
    let isInstance = true;
    isInstance = isInstance && "error" in value;
    isInstance = isInstance && "errorId" in value;

    return isInstance;
}

export function CustomErrorsNoRightToChangeDayReportErrorFromJSON(json: any): CustomErrorsNoRightToChangeDayReportError {
    return CustomErrorsNoRightToChangeDayReportErrorFromJSONTyped(json, false);
}

export function CustomErrorsNoRightToChangeDayReportErrorFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): CustomErrorsNoRightToChangeDayReportError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': json['error'],
        'errorId': json['errorId'],
    };
}


export function CustomErrorsNoRightToChangeDayReportErrorToJSON(value?: CustomErrorsNoRightToChangeDayReportError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': value.error,
        'errorId': value.errorId,
    };
}

