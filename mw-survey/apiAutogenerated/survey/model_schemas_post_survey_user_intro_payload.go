/*
Masters way survey API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasPostSurveyUserIntroPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasPostSurveyUserIntroPayload{}

// SchemasPostSurveyUserIntroPayload struct for SchemasPostSurveyUserIntroPayload
type SchemasPostSurveyUserIntroPayload struct {
	DeviceId string
	PreferredInterfaceLanguage string
	Role string
	Source string
	StudentExperience string
	StudentGoals string
	WhyRegistered string
}

type _SchemasPostSurveyUserIntroPayload SchemasPostSurveyUserIntroPayload

// NewSchemasPostSurveyUserIntroPayload instantiates a new SchemasPostSurveyUserIntroPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasPostSurveyUserIntroPayload(deviceId string, preferredInterfaceLanguage string, role string, source string, studentExperience string, studentGoals string, whyRegistered string) *SchemasPostSurveyUserIntroPayload {
	this := SchemasPostSurveyUserIntroPayload{}
	this.DeviceId = deviceId
	this.PreferredInterfaceLanguage = preferredInterfaceLanguage
	this.Role = role
	this.Source = source
	this.StudentExperience = studentExperience
	this.StudentGoals = studentGoals
	this.WhyRegistered = whyRegistered
	return &this
}

// NewSchemasPostSurveyUserIntroPayloadWithDefaults instantiates a new SchemasPostSurveyUserIntroPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasPostSurveyUserIntroPayloadWithDefaults() *SchemasPostSurveyUserIntroPayload {
	this := SchemasPostSurveyUserIntroPayload{}
	return &this
}

// GetDeviceId returns the DeviceId field value
func (o *SchemasPostSurveyUserIntroPayload) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *SchemasPostSurveyUserIntroPayload) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *SchemasPostSurveyUserIntroPayload) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetPreferredInterfaceLanguage returns the PreferredInterfaceLanguage field value
func (o *SchemasPostSurveyUserIntroPayload) GetPreferredInterfaceLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreferredInterfaceLanguage
}

// GetPreferredInterfaceLanguageOk returns a tuple with the PreferredInterfaceLanguage field value
// and a boolean to check if the value has been set.
func (o *SchemasPostSurveyUserIntroPayload) GetPreferredInterfaceLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreferredInterfaceLanguage, true
}

// SetPreferredInterfaceLanguage sets field value
func (o *SchemasPostSurveyUserIntroPayload) SetPreferredInterfaceLanguage(v string) {
	o.PreferredInterfaceLanguage = v
}

// GetRole returns the Role field value
func (o *SchemasPostSurveyUserIntroPayload) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *SchemasPostSurveyUserIntroPayload) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *SchemasPostSurveyUserIntroPayload) SetRole(v string) {
	o.Role = v
}

// GetSource returns the Source field value
func (o *SchemasPostSurveyUserIntroPayload) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *SchemasPostSurveyUserIntroPayload) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *SchemasPostSurveyUserIntroPayload) SetSource(v string) {
	o.Source = v
}

// GetStudentExperience returns the StudentExperience field value
func (o *SchemasPostSurveyUserIntroPayload) GetStudentExperience() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StudentExperience
}

// GetStudentExperienceOk returns a tuple with the StudentExperience field value
// and a boolean to check if the value has been set.
func (o *SchemasPostSurveyUserIntroPayload) GetStudentExperienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StudentExperience, true
}

// SetStudentExperience sets field value
func (o *SchemasPostSurveyUserIntroPayload) SetStudentExperience(v string) {
	o.StudentExperience = v
}

// GetStudentGoals returns the StudentGoals field value
func (o *SchemasPostSurveyUserIntroPayload) GetStudentGoals() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StudentGoals
}

// GetStudentGoalsOk returns a tuple with the StudentGoals field value
// and a boolean to check if the value has been set.
func (o *SchemasPostSurveyUserIntroPayload) GetStudentGoalsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StudentGoals, true
}

// SetStudentGoals sets field value
func (o *SchemasPostSurveyUserIntroPayload) SetStudentGoals(v string) {
	o.StudentGoals = v
}

// GetWhyRegistered returns the WhyRegistered field value
func (o *SchemasPostSurveyUserIntroPayload) GetWhyRegistered() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WhyRegistered
}

// GetWhyRegisteredOk returns a tuple with the WhyRegistered field value
// and a boolean to check if the value has been set.
func (o *SchemasPostSurveyUserIntroPayload) GetWhyRegisteredOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WhyRegistered, true
}

// SetWhyRegistered sets field value
func (o *SchemasPostSurveyUserIntroPayload) SetWhyRegistered(v string) {
	o.WhyRegistered = v
}

func (o SchemasPostSurveyUserIntroPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasPostSurveyUserIntroPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deviceId"] = o.DeviceId
	toSerialize["preferredInterfaceLanguage"] = o.PreferredInterfaceLanguage
	toSerialize["role"] = o.Role
	toSerialize["source"] = o.Source
	toSerialize["studentExperience"] = o.StudentExperience
	toSerialize["studentGoals"] = o.StudentGoals
	toSerialize["whyRegistered"] = o.WhyRegistered
	return toSerialize, nil
}

func (o *SchemasPostSurveyUserIntroPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deviceId",
		"preferredInterfaceLanguage",
		"role",
		"source",
		"studentExperience",
		"studentGoals",
		"whyRegistered",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasPostSurveyUserIntroPayload := _SchemasPostSurveyUserIntroPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasPostSurveyUserIntroPayload)

	if err != nil {
		return err
	}

	*o = SchemasPostSurveyUserIntroPayload(varSchemasPostSurveyUserIntroPayload)

	return err
}

type NullableSchemasPostSurveyUserIntroPayload struct {
	value *SchemasPostSurveyUserIntroPayload
	isSet bool
}

func (v NullableSchemasPostSurveyUserIntroPayload) Get() *SchemasPostSurveyUserIntroPayload {
	return v.value
}

func (v *NullableSchemasPostSurveyUserIntroPayload) Set(val *SchemasPostSurveyUserIntroPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasPostSurveyUserIntroPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasPostSurveyUserIntroPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasPostSurveyUserIntroPayload(val *SchemasPostSurveyUserIntroPayload) *NullableSchemasPostSurveyUserIntroPayload {
	return &NullableSchemasPostSurveyUserIntroPayload{value: val, isSet: true}
}

func (v NullableSchemasPostSurveyUserIntroPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasPostSurveyUserIntroPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


