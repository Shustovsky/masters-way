// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_intro.query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUserIntroSurvey = `-- name: CreateUserIntroSurvey :one
INSERT INTO user_intro (
    user_uuid,
    device_uuid,
    role,
    preferred_interface_language,
    student_goals,
    student_experience,
    why_registered,
    source
)
VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8
)
RETURNING uuid, user_uuid, device_uuid, role, preferred_interface_language, student_goals, student_experience, why_registered, source, created_at
`

type CreateUserIntroSurveyParams struct {
	UserUuid                   pgtype.UUID `json:"user_uuid"`
	DeviceUuid                 pgtype.UUID `json:"device_uuid"`
	Role                       string      `json:"role"`
	PreferredInterfaceLanguage string      `json:"preferred_interface_language"`
	StudentGoals               string      `json:"student_goals"`
	StudentExperience          string      `json:"student_experience"`
	WhyRegistered              string      `json:"why_registered"`
	Source                     string      `json:"source"`
}

func (q *Queries) CreateUserIntroSurvey(ctx context.Context, arg CreateUserIntroSurveyParams) (UserIntro, error) {
	row := q.db.QueryRow(ctx, createUserIntroSurvey,
		arg.UserUuid,
		arg.DeviceUuid,
		arg.Role,
		arg.PreferredInterfaceLanguage,
		arg.StudentGoals,
		arg.StudentExperience,
		arg.WhyRegistered,
		arg.Source,
	)
	var i UserIntro
	err := row.Scan(
		&i.Uuid,
		&i.UserUuid,
		&i.DeviceUuid,
		&i.Role,
		&i.PreferredInterfaceLanguage,
		&i.StudentGoals,
		&i.StudentExperience,
		&i.WhyRegistered,
		&i.Source,
		&i.CreatedAt,
	)
	return i, err
}
