package openapi

import (
	"mwsurvey/internal/auth"
	"mwsurvey/internal/config"

	openapiSurvey "mwsurvey/apiAutogenerated/survey"
	"net/http"
)

type authTransport struct {
	rt http.RoundTripper
}

func (t *authTransport) RoundTrip(req *http.Request) (*http.Response, error) {
	ctx := req.Context()
	if token, ok := ctx.Value(auth.ContextKeyAuthorization).(string); ok {
		req.Header.Set(auth.HeaderKeyAuthorization, token)
	}
	return t.rt.RoundTrip(req)
}

func MakeStorageAPIClient(cfg *config.Config) *openapiSurvey.APIClient {
	chatAPIConfig := &openapiSurvey.Configuration{
		Host:   cfg.SurveyAPIHost,
		Scheme: "http",
		Servers: openapiSurvey.ServerConfigurations{
			{
				URL:         cfg.SurveyBaseURL,
				Description: "mw-survey",
			},
		},
		HTTPClient: &http.Client{
			Transport: &authTransport{rt: http.DefaultTransport},
		},
	}
	return openapiSurvey.NewAPIClient(chatAPIConfig)
}
