package openapi

import (
	openapiNotification "mwnotification/apiAutogenerated/notification"
	"mwnotification/internal/auth"
	"mwnotification/internal/config"
	"net/http"
)

type authTransport struct {
	rt http.RoundTripper
}

func (t *authTransport) RoundTrip(req *http.Request) (*http.Response, error) {
	ctx := req.Context()
	if token, ok := ctx.Value(auth.ContextKeyAuthorization).(string); ok {
		req.Header.Set(auth.HeaderKeyAuthorization, token)
	}
	return t.rt.RoundTrip(req)
}

func MakeChatAPIClient(cfg *config.Config) *openapiNotification.APIClient {
	notificationAPIConfig := &openapiNotification.Configuration{
		Host:   cfg.NotificationAPIHost,
		Scheme: "http",
		Servers: openapiNotification.ServerConfigurations{
			{
				URL:         cfg.NotificationBaseURL,
				Description: "mw-notification",
			},
		},
		HTTPClient: &http.Client{
			Transport: &authTransport{rt: http.DefaultTransport},
		},
	}
	return openapiNotification.NewAPIClient(notificationAPIConfig)
}
