/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchemasAIEstimateIssueResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasAIEstimateIssueResponse{}

// SchemasAIEstimateIssueResponse struct for SchemasAIEstimateIssueResponse
type SchemasAIEstimateIssueResponse struct {
	Estimation string
}

type _SchemasAIEstimateIssueResponse SchemasAIEstimateIssueResponse

// NewSchemasAIEstimateIssueResponse instantiates a new SchemasAIEstimateIssueResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasAIEstimateIssueResponse(estimation string) *SchemasAIEstimateIssueResponse {
	this := SchemasAIEstimateIssueResponse{}
	this.Estimation = estimation
	return &this
}

// NewSchemasAIEstimateIssueResponseWithDefaults instantiates a new SchemasAIEstimateIssueResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasAIEstimateIssueResponseWithDefaults() *SchemasAIEstimateIssueResponse {
	this := SchemasAIEstimateIssueResponse{}
	return &this
}

// GetEstimation returns the Estimation field value
func (o *SchemasAIEstimateIssueResponse) GetEstimation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Estimation
}

// GetEstimationOk returns a tuple with the Estimation field value
// and a boolean to check if the value has been set.
func (o *SchemasAIEstimateIssueResponse) GetEstimationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Estimation, true
}

// SetEstimation sets field value
func (o *SchemasAIEstimateIssueResponse) SetEstimation(v string) {
	o.Estimation = v
}

func (o SchemasAIEstimateIssueResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasAIEstimateIssueResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["estimation"] = o.Estimation
	return toSerialize, nil
}

func (o *SchemasAIEstimateIssueResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"estimation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasAIEstimateIssueResponse := _SchemasAIEstimateIssueResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasAIEstimateIssueResponse)

	if err != nil {
		return err
	}

	*o = SchemasAIEstimateIssueResponse(varSchemasAIEstimateIssueResponse)

	return err
}

type NullableSchemasAIEstimateIssueResponse struct {
	value *SchemasAIEstimateIssueResponse
	isSet bool
}

func (v NullableSchemasAIEstimateIssueResponse) Get() *SchemasAIEstimateIssueResponse {
	return v.value
}

func (v *NullableSchemasAIEstimateIssueResponse) Set(val *SchemasAIEstimateIssueResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasAIEstimateIssueResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasAIEstimateIssueResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasAIEstimateIssueResponse(val *SchemasAIEstimateIssueResponse) *NullableSchemasAIEstimateIssueResponse {
	return &NullableSchemasAIEstimateIssueResponse{value: val, isSet: true}
}

func (v NullableSchemasAIEstimateIssueResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasAIEstimateIssueResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


